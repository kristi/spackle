# This sets up a pathify environment.  Put this file at
#     ~/.pathify/spackle
# then run
#     pathify spackle
# to activate this environment.
#
# This file must be loaded from pathify.  (Or you can source it directly)
# You cannot run it.
#
# This sets up environment variables for a spackle build environment

deactivate_spackle () {
    # reset old environment variables
    if [ -n "${_OLD_SPACKLE_PATH+set}" ] ; then
        PATH="$_OLD_SPACKLE_PATH"
        [ -z "$PATH" ] && unset PATH || export PATH
        unset _OLD_SPACKLE_PATH
    fi
    if [ -n "${_OLD_SPACKLE_MANPATH+set}" ] ; then
        MANPATH="$_OLD_SPACKLE_MANPATH"
        [ -z "$MANPATH" ] && unset MANPATH || export MANPATH
        unset _OLD_SPACKLE_MANPATH
    fi
    if [ -n "${_OLD_SPACKLE_INFOPATH+set}" ] ; then
        INFOPATH="$_OLD_SPACKLE_INFOPATH"
        [ -z "$INFOPATH" ] && unset INFOPATH || export INFOPATH
        unset _OLD_SPACKLE_INFOPATH
    fi

    if [ -n "${_OLD_SPACKLE_CFLAGS+set}" ] ; then
        CFLAGS="$_OLD_SPACKLE_CFLAGS"
        [ -z "$CFLAGS" ] && unset CFLAGS || export CFLAGS
        unset _OLD_SPACKLE_CFLAGS
    fi
    if [ -n "${_OLD_SPACKLE_CXXFLAGS+set}" ] ; then
        CXXFLAGS="$_OLD_SPACKLE_CXXFLAGS"
        [ -z "$CXXFLAGS" ] && unset CXXFLAGS || export CXXFLAGS
        unset _OLD_SPACKLE_CXXFLAGS
    fi
    if [ -n "${_OLD_SPACKLE_CPPFLAGS+set}" ] ; then
        CPPFLAGS="$_OLD_SPACKLE_CPPFLAGS"
        [ -z "$CPPFLAGS" ] && unset CPPFLAGS || export CPPFLAGS
        unset _OLD_SPACKLE_CPPFLAGS
    fi
    if [ -n "${_OLD_SPACKLE_LDFLAGS+set}" ] ; then
        LDFLAGS="$_OLD_SPACKLE_LDFLAGS"
        [ -z "$LDFLAGS" ] && unset LDFLAGS || export LDFLAGS
        unset _OLD_SPACKLE_LDFLAGS
    fi
    if [ -n "${_OLD_SPACKLE_LD_RUN_PATH+set}" ] ; then
        LD_RUN_PATH="$_OLD_SPACKLE_LD_RUN_PATH"
        [ -z "$LD_RUN_PATH" ] && unset LD_RUN_PATH || export LD_RUN_PATH
        unset _OLD_SPACKLE_LD_RUN_PATH
    fi
    if [ -n "${_OLD_SPACKLE_MAKEFLAGS+set}" ] ; then
        MAKEFLAGS="$_OLD_SPACKLE_MAKEFLAGS"
        [ -z "$MAKEFLAGS" ] && unset MAKEFLAGS || export MAKEFLAGS
        unset _OLD_SPACKLE_MAKEFLAGS
    fi
    if [ -n "${_OLD_SPACKLE_PKG_CONFIG_PATH+set}" ] ; then
        PKG_CONFIG_PATH="$_OLD_SPACKLE_PKG_CONFIG_PATH"
        [ -z "$PKG_CONFIG_PATH" ] && unset PKG_CONFIG_PATH || export PKG_CONFIG_PATH
        unset _OLD_SPACKLE_PKG_CONFIG_PATH
    fi

    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r
    fi

    if [ -n "$_OLD_SPACKLE_PS1" ] ; then
        PS1="$_OLD_SPACKLE_PS1"
        export PS1
        unset _OLD_SPACKLE_PS1
    fi

    unset SPACKLE_ENV
    unset SPACKLE_PREFIX
    if [ ! "$1" = "nondestructive" ] ; then
    # Self destruct!
        unset -f deactivate_spackle
    fi
}

# unset irrelavent variables
deactivate_spackle nondestructive

SPACKLE_ENV="spackle"
export SPACKLE_ENV

SPACKLE_PREFIX="$HOME/local"
export SPACKLE_PREFIX

_OLD_SPACKLE_PATH="$PATH"
export PATH="$SPACKLE_PREFIX/bin:$SPACKLE_PREFIX/usr/bin:$SPACKLE_PREFIX/usr/sbin:$PATH"

_OLD_SPACKLE_MANPATH="$MANPATH"
export MANPATH="$SPACKLE_PREFIX/usr/share/man:$MANPATH"

_OLD_SPACKLE_INFOPATH="$INFOPATH"
export INFOPATH="$SPACKLE_PREFIX/usr/share/info:$INFOPATH"

_OLD_SPACKLE_CFLAGS="$CFLAGS"
export CFLAGS="-I$SPACKLE_PREFIX/usr/include $CFLAGS"

_OLD_SPACKLE_CXXFLAGS="$CXXFLAGS"
export CXXFLAGS="-I$SPACKLE_PREFIX/usr/include $CXXFLAGS"

_OLD_SPACKLE_CPPFLAGS="$CPPFLAGS"
export CPPFLAGS="-I$SPACKLE_PREFIX/usr/include $CPPFLAGS"

_OLD_SPACKLE_LDFLAGS="$LDFLAGS"
export LDFLAGS="-L$SPACKLE_PREFIX/usr/lib -Wl,-rpath,$SPACKLE_PREFIX/usr/lib $LDFLAGS"

_OLD_SPACKLE_LD_RUN_PATH="$LD_RUN_PATH"
export LD_RUN_PATH="$SPACKLE_PREFIX/usr/lib${LD_RUN_PATH:+:$LD_RUN_PATH}"

_OLD_SPACKLE_MAKEFLAGS="$MAKEFLAGS"
export MAKEFLAGS="-j1 $MAKEFLAGS"

_OLD_SPACKLE_PKG_CONFIG_PATH="$PKG_CONFIG_PATH"
export PKG_CONFIG_PATH="$SPACKLE_PREFIX/usr/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH}"

if [ -z "$SPACKLE_DISABLE_PROMPT" ] &&
   [ -z "$PATHIFY_DISABLE_PROMPT" ] ; then
    _OLD_SPACKLE_PS1="$PS1"
    # Add env name before first non-whitespace PS1 char
    PS1=$(echo "$PS1" | sed -e '0,/\S/ s//[spackle] &/')
    export PS1
fi

# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
    hash -r
fi

# vim: set ft=zsh ts=4 sw=4 sts=4 et:
